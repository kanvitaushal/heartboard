@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Times+New+Roman&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --dark-red: #8B0000;
  --light-red: #DC143C;
  --vintage-red: #A52A2A;
  --cream: #FFF8DC;
  --vintage-gold: #DAA520;
  --lace-white: #FDF5E6;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Times New Roman', serif;
  background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
  min-height: 100vh;
}

.vintage-goods {
  font-family: 'Playfair Display', serif;
  font-weight: 600;
}

.times-roman {
  font-family: 'Times New Roman', serif;
}

.lace-border {
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23FDF5E6' fill-opacity='0.8'%3E%3Cpath d='M30 0c16.569 0 30 13.431 30 30S46.569 60 30 60 0 46.569 0 30 13.431 0 30 0zm0 10c11.046 0 20 8.954 20 20s-8.954 20-20 20-20-8.954-20-20 8.954-20 20-20zm0 10c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.envelope {
  background: linear-gradient(145deg, #f0f0f0, #cacaca);
  box-shadow: 5px 5px 10px #bebebe, -5px -5px 10px #ffffff;
  transition: all 0.3s ease;
}

.envelope:hover {
  transform: translateY(-5px);
  box-shadow: 8px 8px 15px #bebebe, -8px -8px 15px #ffffff;
}

.parchment {
  background: linear-gradient(to right, #f4f1e8 0%, #f9f6ef 50%, #f4f1e8 100%);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  border: 1px solid #d4c4a8;
}

.profile-card {
  background: linear-gradient(135deg, #fff 0%, #f8f8f8 100%);
  box-shadow: 0 4px 15px rgba(139, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.profile-card:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 25px rgba(139, 0, 0, 0.2);
}

.countdown-card {
  background: linear-gradient(135deg, var(--dark-red) 0%, var(--vintage-red) 100%);
  color: white;
  box-shadow: 0 4px 15px rgba(139, 0, 0, 0.3);
}

.sidebar {
  background: linear-gradient(180deg, var(--dark-red) 0%, var(--vintage-red) 100%);
  box-shadow: 2px 0 10px rgba(0,0,0,0.1);
}

.sidebar-tab {
  transition: all 0.3s ease;
}

.sidebar-tab:hover {
  background: rgba(255,255,255,0.1);
  transform: translateX(5px);
}

.sidebar-tab.active {
  background: rgba(255,255,255,0.2);
  border-left: 4px solid var(--vintage-gold);
}

.gift-item {
  background: white;
  border-left: 4px solid var(--light-red);
  transition: all 0.3s ease;
}

.gift-item:hover {
  transform: translateX(5px);
  box-shadow: 0 4px 15px rgba(139, 0, 0, 0.1);
}

.auth-background {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow: hidden;
}

.auth-background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M50 0c27.614 0 50 22.386 50 50S77.614 100 50 100 0 77.614 0 50 22.386 0 50 0zm0 20c16.569 0 30 13.431 30 30S66.569 80 50 80 20 66.569 20 50s13.431-30 30-30z'/%3E%3C/g%3E%3C/svg%3E");
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

.doodle-float {
  animation: doodleFloat 6s ease-in-out infinite;
}

@keyframes doodleFloat {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  25% { transform: translateY(-10px) rotate(5deg); }
  50% { transform: translateY(-5px) rotate(-5deg); }
  75% { transform: translateY(-15px) rotate(3deg); }
}

.fade-in {
  animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.slide-in {
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}
